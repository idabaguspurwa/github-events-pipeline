apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-config
  namespace: airflow
  labels:
    app.kubernetes.io/managed-by: Helm
    chart: airflow-1.11.0
    component: config
    heritage: Helm
    release: airflow
    tier: airflow
  annotations:
    meta.helm.sh/release-name: airflow
    meta.helm.sh/release-namespace: airflow
data:
  airflow.cfg: |
    [celery]
    flower_url_prefix =
    worker_concurrency = 16

    [celery_kubernetes_executor]
    kubernetes_queue = kubernetes

    [core]
    colored_console_log = False
    dags_folder = /opt/airflow/dags/repo/airflow/dags
    executor = KubernetesExecutor
    load_examples = False
    remote_logging = False

    [elasticsearch]
    json_format = True
    log_id_template = {dag_id}_{task_id}_{execution_date}_{try_number}

    [elasticsearch_configs]
    max_retries = 3
    retry_timeout = True
    timeout = 30

    [kerberos]
    ccache = /var/kerberos-ccache/cache
    keytab = /etc/airflow.keytab
    principal = airflow@FOO.COM
    reinit_frequency = 3600

    [kubernetes]
    airflow_configmap = airflow-config
    airflow_local_settings_configmap = airflow-config
    multi_namespace_mode = False
    namespace = airflow
    pod_template_file = /opt/airflow/pod_templates/pod_template_file.yaml
    worker_container_repository = idabagusprw/airflow-with-gx
    worker_container_tag = latest
    in_cluster = True

    [kubernetes_executor]
    multi_namespace_mode = False
    namespace = airflow
    pod_template_file = /opt/airflow/pod_templates/pod_template_file.yaml
    worker_container_repository = idabagusprw/airflow-with-gx
    worker_container_tag = latest
    in_cluster = True
    delete_worker_pods = False
    delete_worker_pods_on_failure = False

    [logging]
    colored_console_log = False
    remote_logging = False
    logging_level = INFO
    fab_logging_level = WARN

    [metrics]
    statsd_host = airflow-statsd
    statsd_on = True
    statsd_port = 9125
    statsd_prefix = airflow

    [scheduler]
    run_duration = 41460
    standalone_dag_processor = False
    statsd_host = airflow-statsd
    statsd_on = True
    statsd_port = 9125
    statsd_prefix = airflow

    [triggerer]
    default_capacity = 1000

    [webserver]
    enable_proxy_fix = True
    rbac = True
    expose_config = True
    log_fetch_timeout_sec = 60

  airflow_local_settings.py: |
    from airflow.www.utils import UIAlert

    DASHBOARD_UIALERTS = [
      UIAlert(
        'Usage of a dynamic webserver secret key detected. We recommend a static webserver secret key instead.'
        ' See the <a href='
        '"https://airflow.apache.org/docs/helm-chart/stable/production-guide.html#webserver-secret-key">'
        'Helm Chart Production Guide</a> for more details.',
        category="warning",
        roles=["Admin"],
        html=True,
      )
    ]

  pod_template_file.yaml: |
    ---
    apiVersion: v1
    kind: Pod
    metadata:
      name: placeholder-name
      labels:
        tier: airflow
        component: worker
        release: airflow
    spec:
      # Enhanced DNS configuration for better name resolution
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "2"
          - name: edns0
      initContainers:
        - name: git-sync-init
          image: registry.k8s.io/git-sync/git-sync:v3.6.9
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 65533
          env:
            - name: GIT_SYNC_REV
              value: "HEAD"
            - name: GIT_SYNC_BRANCH
              value: "main"
            - name: GIT_SYNC_REPO
              value: "https://github.com/idabaguspurwa/github-events-pipeline.git"
            - name: GIT_SYNC_DEPTH
              value: "1"
            - name: GIT_SYNC_ROOT
              value: "/git"
            - name: GIT_SYNC_DEST
              value: "repo"
            - name: GIT_SYNC_ADD_USER
              value: "true"
            - name: GIT_SYNC_WAIT
              value: "5"
            - name: GIT_SYNC_MAX_SYNC_FAILURES
              value: "0"
            - name: GIT_SYNC_ONE_TIME
              value: "true"
          resources: {}
          volumeMounts:
          - name: dags
            mountPath: /git
      containers:
        - envFrom: []
          env:
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor
            # Hard Coded Airflow Envs
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-fernet-key
                  key: fernet-key
            # For Airflow <2.3, backward compatibility; moved to [database] in 2.3
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-metadata
                  key: connection
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-metadata
                  key: connection
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  name: airflow-metadata
                  key: connection
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-webserver-secret-key
                  key: webserver-secret-key
          image: apache/airflow:2.7.1
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          name: base
          resources: {}
          volumeMounts:
            - mountPath: "/opt/airflow/logs"
              name: logs
            - name: config
              mountPath: "/opt/airflow/airflow.cfg"
              subPath: airflow.cfg
              readOnly: true
            - name: config
              mountPath: "/opt/airflow/config/airflow_local_settings.py"
              subPath: airflow_local_settings.py
              readOnly: true
            - name: dags
              mountPath: /opt/airflow/dags
              readOnly: True
      restartPolicy: Never
      securityContext:
        runAsUser: 50000
        fsGroup: 0
      nodeSelector: {}
      affinity: {}
      terminationGracePeriodSeconds: 600
      tolerations: []
      topologySpreadConstraints: []
      serviceAccountName: airflow-worker
      volumes:
      - name: dags
        emptyDir: {}
      - emptyDir: {}
        name: logs
      - name: config
        configMap:
          name: airflow-config
